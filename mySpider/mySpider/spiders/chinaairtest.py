import scrapy
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad
import execjs
import json

## function deIZLF7oahc0DLiXbqt(data) {
# data = AES.decrypt(data, askiZExYII01, asideGdRY692);
# data = DES.decrypt(data, dsk9EbiUpi5W, dsi3gJ2aZe1f);
# data = BASE64.decrypt(data);
askiZExYII01 = 'aPnyDR5Ca6FMIfdw'
asideGdRY692 = 'bNpeyqJl34VlZ7ng'
dsk9EbiUpi5W = 'hIFclTxH0JalYZiu'
dsi3gJ2aZe1f = 'xMFHANC8X1TunaGs'
m0fhOhhGL = 'GETMONTHDATA'
oBDNNVgaDf = '北京'


class ChinaairtestSpider(scrapy.Spider):
    name = "chinaairtest"
    allowed_domains = ["www.aqistudy.cn"]
    askiZExYII01 = 'aPnyDR5Ca6FMIfdw'
    asideGdRY692 = 'bNpeyqJl34VlZ7ng'
    dsk9EbiUpi5W = 'hIFclTxH0JalYZiu'
    dsi3gJ2aZe1f = 'xMFHANC8X1TunaGs'
    # start_urls = ["https://www.aqistudy.cn/historydata/api/historyapi.php"]
    dskQCqpdBOGo='hEaIOlrX7tlhAOkz'
    dsiqYiQHbZQp='xMBwDXG1HOubUV04'
    ask4u6FbhGV8 = 'a0QHmC1Ova5958nC'
    asi2hhkBUJbo = 'bMu71lHRX6bRmPxU'
    def __init__(self):
        global ctx  # 声明全局变量
        with open('spiders/chinaairtest.js', "r", encoding="utf-8") as file:
            js_code = file.read()
            # 加载 JS 引擎
            ctx = execjs.compile(js_code)

    def start_requests(self):
        cityname = '杭州'
        data = self.poPBVxzNuafY8Yu('GETMONTHDATA',cityname)
        request_data={
            'hA4Nse2cT': data
        }
        headers = {
            'Accept': '*/*',
            'Accept-Language': 'zh-CN,zh;q=0.9',
            'Cache-Control': 'no-cache',
            'Connection': 'keep-alive',
            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',
            'Origin': 'https://www.aqistudy.cn',
            'Pragma': 'no-cache',
            'Referer': 'https://www.aqistudy.cn/historydata/monthdata.php?city=%E6%9D%AD%E5%B7%9E',
            'Sec-Fetch-Dest': 'empty',
            'Sec-Fetch-Mode': 'cors',
            'Sec-Fetch-Site': 'same-origin',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/130.0.0.0 Safari/537.36',
            'X-Requested-With': 'XMLHttpRequest',
            'sec-ch-ua': '"Chromium";v="130", "Google Chrome";v="130", "Not?A_Brand";v="99"',
            'sec-ch-ua-mobile': '?0',
            'sec-ch-ua-platform': '"Windows"',
        }

        yield scrapy.Request(
            # 该地址为登录青年大学习之后的地址
            url="https://www.aqistudy.cn/historydata/api/historyapi.php",
            callback=self.parse,
            method='POST',
            headers=headers,
            body=json.dumps(request_data),  # 将 Python 字典转换为 JSON 格式
        )

    def parse(self, response):
        print(response.text)
        data = self.dxvERkeEvHbS(response.text)
        print(data)
        pass

    def dxvERkeEvHbS(self, data):
        data = ctx.call('base64decry', data)
        data = ctx.call('aesDES', data, self.dskQCqpdBOGo, self.dsiqYiQHbZQp)
        data = ctx.call('desdecrypt', data, self.ask4u6FbhGV8, self.asi2hhkBUJbo)
        data = ctx.call('base64decry', data)
        print(data)
        pass

    ## m0fhOhhGL
    def poPBVxzNuafY8Yu(self, m0fhOhhGL, oBDNNVgaDf):
        pKmSFk8 = ctx.call('poPBVxzNuafY8Yu', m0fhOhhGL, oBDNNVgaDf)
        return pKmSFk8




def monthdata():
    start_urls = ["https://www.aqistudy.cn/historydata/monthdata.php?city=%E4%B8%8A%E6%B5%B7"]
    data = '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'
    # 创建 AES 解密对象
    with open("chinaairtest.js", "r", encoding="utf-8") as file:
        js_code = file.read()
        # 加载 JS 引擎
        ctx = execjs.compile(js_code)
        data = ctx.call('aesDES', data, askiZExYII01, asideGdRY692)
        data = ctx.call('desdecrypt', data, dsk9EbiUpi5W, dsi3gJ2aZe1f)
        data = ctx.call('base64decry', data)
        print(data)
